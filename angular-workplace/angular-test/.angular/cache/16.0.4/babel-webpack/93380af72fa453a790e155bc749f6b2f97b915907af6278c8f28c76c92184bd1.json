{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, NgModule } from '@angular/core';\nclass CalixInputService {\n  constructor() {}\n}\nCalixInputService.ɵfac = function CalixInputService_Factory(t) {\n  return new (t || CalixInputService)();\n};\nCalixInputService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CalixInputService,\n  factory: CalixInputService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CalixInputService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass CalixInputComponent {\n  constructor() {\n    this.hintName = '';\n    this.label = '';\n    this.error_message = '';\n    this.type = '';\n    this.value = '';\n  }\n  ngOnInit() {\n    this.checkRequiredFields(this.label, 'label');\n    this.checkRequiredFields(this.error_message, 'error_message');\n    this.checkRequiredFields(this.type, 'type');\n  }\n  ngOnChanges(changes) {\n    this.checkRequiredFields(this.label, 'label');\n    this.checkRequiredFields(this.error_message, 'error_message');\n    this.checkRequiredFields(this.type, 'type');\n  }\n  checkRequiredFields(input, attribute) {\n    if (input.length === 0) {\n      throw new Error(\"Attribute \" + attribute + \" is required\");\n    }\n  }\n  changeFn(e) {\n    this.value = e.target.value;\n  }\n  modelChangeFn(value) {\n    this.value = value;\n  }\n  addPrefix() {\n    if (!this.value.startsWith('calix-')) {\n      this.value = \"calix-\" + this.value;\n    }\n  }\n}\nCalixInputComponent.ɵfac = function CalixInputComponent_Factory(t) {\n  return new (t || CalixInputComponent)();\n};\nCalixInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CalixInputComponent,\n  selectors: [[\"lib-calix-input\"]],\n  inputs: {\n    hintName: [\"hint\", \"hintName\"],\n    label: \"label\",\n    error_message: \"error_message\",\n    type: \"type\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 0,\n  template: function CalixInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtext(0, \"./input.component.html\");\n    }\n  },\n  styles: [\".centered-element[_ngcontent-%COMP%]{align-items:center;background-color:#fff;display:flex}.centered-element[_ngcontent-%COMP%] > img[_ngcontent-%COMP%]{margin-left:10px}.centered-elementError[_ngcontent-%COMP%]{margin-top:-20px;display:flex;align-items:center}.centered-elementError[_ngcontent-%COMP%] > h5[_ngcontent-%COMP%]{align-items:center;color:red;margin-left:10px}.hint[_ngcontent-%COMP%]{color:#4b4b4b}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CalixInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-calix-input',\n      template: './input.component.html',\n      styles: [\".centered-element{align-items:center;background-color:#fff;display:flex}.centered-element>img{margin-left:10px}.centered-elementError{margin-top:-20px;display:flex;align-items:center}.centered-elementError>h5{align-items:center;color:red;margin-left:10px}.hint{color:#4b4b4b}\\n\"]\n    }]\n  }], null, {\n    hintName: [{\n      type: Input,\n      args: ['hint']\n    }],\n    label: [{\n      type: Input,\n      args: ['label']\n    }],\n    error_message: [{\n      type: Input,\n      args: ['error_message']\n    }],\n    type: [{\n      type: Input,\n      args: ['type']\n    }]\n  });\n})();\nclass CalixInputModule {}\nCalixInputModule.ɵfac = function CalixInputModule_Factory(t) {\n  return new (t || CalixInputModule)();\n};\nCalixInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CalixInputModule\n});\nCalixInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CalixInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CalixInputComponent],\n      imports: [],\n      exports: [CalixInputComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of calix-input\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CalixInputComponent, CalixInputModule, CalixInputService };","map":{"version":3,"names":["i0","Injectable","Component","Input","NgModule","CalixInputService","constructor","ɵfac","CalixInputService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","CalixInputComponent","hintName","label","error_message","value","ngOnInit","checkRequiredFields","ngOnChanges","changes","input","attribute","length","Error","changeFn","e","target","modelChangeFn","addPrefix","startsWith","CalixInputComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","template","CalixInputComponent_Template","rf","ctx","ɵɵtext","styles","selector","CalixInputModule","CalixInputModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","imports","exports"],"sources":["C:/Users/nghannem/Desktop/Test CACIB/workplaces/angular-workplace/angular-test/node_modules/calix-input-ng/fesm2022/calix-input.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, NgModule } from '@angular/core';\n\nclass CalixInputService {\n    constructor() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass CalixInputComponent {\n    constructor() {\n        this.hintName = '';\n        this.label = '';\n        this.error_message = '';\n        this.type = '';\n        this.value = '';\n    }\n    ngOnInit() {\n        this.checkRequiredFields(this.label, 'label');\n        this.checkRequiredFields(this.error_message, 'error_message');\n        this.checkRequiredFields(this.type, 'type');\n    }\n    ngOnChanges(changes) {\n        this.checkRequiredFields(this.label, 'label');\n        this.checkRequiredFields(this.error_message, 'error_message');\n        this.checkRequiredFields(this.type, 'type');\n    }\n    checkRequiredFields(input, attribute) {\n        if (input.length === 0) {\n            throw new Error(\"Attribute \" + attribute + \" is required\");\n        }\n    }\n    changeFn(e) {\n        this.value = e.target.value;\n    }\n    modelChangeFn(value) {\n        this.value = value;\n    }\n    addPrefix() {\n        if (!this.value.startsWith('calix-')) {\n            this.value = \"calix-\" + this.value;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.4\", type: CalixInputComponent, selector: \"lib-calix-input\", inputs: { hintName: [\"hint\", \"hintName\"], label: \"label\", error_message: \"error_message\", type: \"type\" }, usesOnChanges: true, ngImport: i0, template: './input.component.html', isInline: true, styles: [\".centered-element{align-items:center;background-color:#fff;display:flex}.centered-element>img{margin-left:10px}.centered-elementError{margin-top:-20px;display:flex;align-items:center}.centered-elementError>h5{align-items:center;color:red;margin-left:10px}.hint{color:#4b4b4b}\\n\"] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lib-calix-input', template: './input.component.html', styles: [\".centered-element{align-items:center;background-color:#fff;display:flex}.centered-element>img{margin-left:10px}.centered-elementError{margin-top:-20px;display:flex;align-items:center}.centered-elementError>h5{align-items:center;color:red;margin-left:10px}.hint{color:#4b4b4b}\\n\"] }]\n        }], propDecorators: { hintName: [{\n                type: Input,\n                args: ['hint']\n            }], label: [{\n                type: Input,\n                args: ['label']\n            }], error_message: [{\n                type: Input,\n                args: ['error_message']\n            }], type: [{\n                type: Input,\n                args: ['type']\n            }] } });\n\nclass CalixInputModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputModule, declarations: [CalixInputComponent], exports: [CalixInputComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.4\", ngImport: i0, type: CalixInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CalixInputComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        CalixInputComponent\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of calix-input\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CalixInputComponent, CalixInputModule, CalixInputService };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAEtE,MAAMC,iBAAiB,CAAC;EACpBC,WAAWA,CAAA,EAAG,CAAE;AAGpB;AAJMD,iBAAiB,CAELE,IAAI,YAAAC,0BAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFJ,iBAAiB;AAAA,CAAoD;AAF7KA,iBAAiB,CAGLK,KAAK,kBAE0DV,EAAE,CAAAW,kBAAA;EAAAC,KAAA,EAF+BP,iBAAiB;EAAAQ,OAAA,EAAjBR,iBAAiB,CAAAE,IAAA;EAAAO,UAAA,EAAc;AAAM,EAAG;AAE1J;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAAiFf,EAAE,CAAAgB,iBAAA,CAAQX,iBAAiB,EAAc,CAAC;IAC/GY,IAAI,EAAEhB,UAAU;IAChBiB,IAAI,EAAE,CAAC;MACCJ,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC;AAAA;AAEtD,MAAMK,mBAAmB,CAAC;EACtBb,WAAWA,CAAA,EAAG;IACV,IAAI,CAACc,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACL,IAAI,GAAG,EAAE;IACd,IAAI,CAACM,KAAK,GAAG,EAAE;EACnB;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACJ,KAAK,EAAE,OAAO,CAAC;IAC7C,IAAI,CAACI,mBAAmB,CAAC,IAAI,CAACH,aAAa,EAAE,eAAe,CAAC;IAC7D,IAAI,CAACG,mBAAmB,CAAC,IAAI,CAACR,IAAI,EAAE,MAAM,CAAC;EAC/C;EACAS,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACF,mBAAmB,CAAC,IAAI,CAACJ,KAAK,EAAE,OAAO,CAAC;IAC7C,IAAI,CAACI,mBAAmB,CAAC,IAAI,CAACH,aAAa,EAAE,eAAe,CAAC;IAC7D,IAAI,CAACG,mBAAmB,CAAC,IAAI,CAACR,IAAI,EAAE,MAAM,CAAC;EAC/C;EACAQ,mBAAmBA,CAACG,KAAK,EAAEC,SAAS,EAAE;IAClC,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;MACpB,MAAM,IAAIC,KAAK,CAAC,YAAY,GAAGF,SAAS,GAAG,cAAc,CAAC;IAC9D;EACJ;EACAG,QAAQA,CAACC,CAAC,EAAE;IACR,IAAI,CAACV,KAAK,GAAGU,CAAC,CAACC,MAAM,CAACX,KAAK;EAC/B;EACAY,aAAaA,CAACZ,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAa,SAASA,CAAA,EAAG;IACR,IAAI,CAAC,IAAI,CAACb,KAAK,CAACc,UAAU,CAAC,QAAQ,CAAC,EAAE;MAClC,IAAI,CAACd,KAAK,GAAG,QAAQ,GAAG,IAAI,CAACA,KAAK;IACtC;EACJ;AAGJ;AApCMJ,mBAAmB,CAkCPZ,IAAI,YAAA+B,4BAAA7B,CAAA;EAAA,YAAAA,CAAA,IAAwFU,mBAAmB;AAAA,CAAmD;AAlC9KA,mBAAmB,CAmCPoB,IAAI,kBA1C2DvC,EAAE,CAAAwC,iBAAA;EAAAvB,IAAA,EA0CeE,mBAAmB;EAAAsB,SAAA;EAAAC,MAAA;IAAAtB,QAAA;IAAAC,KAAA;IAAAC,aAAA;IAAAL,IAAA;EAAA;EAAA0B,QAAA,GA1CpC3C,EAAE,CAAA4C,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAFjD,EAAE,CAAAmD,MAAA,6BA0C+O;IAAA;EAAA;EAAAC,MAAA;AAAA,EAAuT;AAEznB;EAAA,QAAArC,SAAA,oBAAAA,SAAA,KA5CiFf,EAAE,CAAAgB,iBAAA,CA4CQG,mBAAmB,EAAc,CAAC;IACjHF,IAAI,EAAEf,SAAS;IACfgB,IAAI,EAAE,CAAC;MAAEmC,QAAQ,EAAE,iBAAiB;MAAEN,QAAQ,EAAE,wBAAwB;MAAEK,MAAM,EAAE,CAAC,uRAAuR;IAAE,CAAC;EACjX,CAAC,CAAC,QAAkB;IAAEhC,QAAQ,EAAE,CAAC;MACzBH,IAAI,EAAEd,KAAK;MACXe,IAAI,EAAE,CAAC,MAAM;IACjB,CAAC,CAAC;IAAEG,KAAK,EAAE,CAAC;MACRJ,IAAI,EAAEd,KAAK;MACXe,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEI,aAAa,EAAE,CAAC;MAChBL,IAAI,EAAEd,KAAK;MACXe,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC,CAAC;IAAED,IAAI,EAAE,CAAC;MACPA,IAAI,EAAEd,KAAK;MACXe,IAAI,EAAE,CAAC,MAAM;IACjB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMoC,gBAAgB,CAAC;AAAjBA,gBAAgB,CACJ/C,IAAI,YAAAgD,yBAAA9C,CAAA;EAAA,YAAAA,CAAA,IAAwF6C,gBAAgB;AAAA,CAAkD;AAD1KA,gBAAgB,CAEJE,IAAI,kBA/D2DxD,EAAE,CAAAyD,gBAAA;EAAAxC,IAAA,EA+D4BqC;AAAgB,EAAwE;AAFjMA,gBAAgB,CAGJI,IAAI,kBAhE2D1D,EAAE,CAAA2D,gBAAA,IAgE+C;AAElI;EAAA,QAAA5C,SAAA,oBAAAA,SAAA,KAlEiFf,EAAE,CAAAgB,iBAAA,CAkEQsC,gBAAgB,EAAc,CAAC;IAC9GrC,IAAI,EAAEb,QAAQ;IACdc,IAAI,EAAE,CAAC;MACC0C,YAAY,EAAE,CACVzC,mBAAmB,CACtB;MACD0C,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,CACL3C,mBAAmB;IAE3B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEmC,gBAAgB,EAAEjD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}